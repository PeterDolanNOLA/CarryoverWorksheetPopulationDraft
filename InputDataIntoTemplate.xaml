<Activity mc:Ignorable="sap sap2010" x:Class="InputDataIntoTemplate" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:sc="clr-namespace:System.Collections;assembly=mscorlib" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_CY" Type="InArgument(scg:Dictionary(x:String, scg:Dictionary(x:String, scg:Dictionary(x:Double, x:Double))))" />
    <x:Property Name="in_PY" Type="InArgument(scg:Dictionary(x:String, scg:Dictionary(x:String, scg:Dictionary(x:Double, x:Double))))" />
    <x:Property Name="in_CurAlotAmt" Type="InArgument(scg:Dictionary(x:String, x:Double))" />
    <x:Property Name="in_GOACodes" Type="InArgument(sc:ArrayList)" />
    <x:Property Name="in_CurrentYear" Type="InArgument(x:Int32)" />
    <x:Property Name="in_NewSheetFilePath" Type="InArgument(x:String)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>789.333333333333,9704.66666666667</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>InputDataIntoTemplate_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="22">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Excel</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="20">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="InputDataIntoTemplate" sap:VirtualizedContainerService.HintSize="769.333333333333,9604.66666666667" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="ui:WorkbookApplication" Name="Workbook" />
      <Variable x:TypeArguments="x:Int32" Default="2019" Name="CurrentYear" />
      <Variable x:TypeArguments="scg:Dictionary(x:String, x:Double)" Name="CurAlotAmt" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="727.333333333333,9512.66666666667" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_1" Workbook="[Workbook]" WorkbookPath="[in_NewSheetFilePath]">
      <ui:ExcelApplicationScope.Body>
        <ActivityAction x:TypeArguments="ui:WorkbookApplication">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="693.333333333333,9404" sap2010:WorkflowViewState.IdRef="Sequence_2">
            <Sequence.Variables>
              <Variable x:TypeArguments="x:String" Name="SheetName" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:InvokeCode ContinueOnError="{x:Null}" Code="Dim excel As Microsoft.Office.Interop.Excel.Application = New Microsoft.Office.Interop.Excel.ApplicationClass()&#xD;&#xA;Dim excelWorkbook  As Microsoft.Office.Interop.Excel.Workbook = Workbook.CurrentWorkbook&#xD;&#xA;Dim excelWorksheet As Microsoft.Office.Interop.Excel.Worksheet = CType(excelWorkbook.Sheets(1), Microsoft.Office.Interop.Excel.Worksheet)&#xD;&#xA;excelWorksheet.Delete" DisplayName="Invoke code" sap:VirtualizedContainerService.HintSize="651.333333333333,164" sap2010:WorkflowViewState.IdRef="InvokeCode_1">
              <ui:InvokeCode.Arguments>
                <InArgument x:TypeArguments="x:String" x:Key="FilePath">[in_NewSheetFilePath]</InArgument>
                <InArgument x:TypeArguments="ui:WorkbookApplication" x:Key="Workbook">[Workbook]</InArgument>
              </ui:InvokeCode.Arguments>
            </ui:InvokeCode>
            <Assign sap:VirtualizedContainerService.HintSize="651.333333333333,62" sap2010:WorkflowViewState.IdRef="Assign_1">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[SheetName]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[Workbook.GetWorkbookSheet(0)]</InArgument>
              </Assign.Value>
            </Assign>
            <ui:ExcelWriteCell Cell="K1" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="651.333333333333,86.6666666666667" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_7" SheetName="[SheetName]" Text="[(in_CurrentYear + 1).ToString + &quot; Estimated Carryover&quot;]" />
            <ui:ExcelWriteCell Cell="M1" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="651.333333333333,86.6666666666667" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_8" SheetName="[SheetName]" Text="[&quot;FY &quot; + in_CurrentYear.ToString]" />
            <ui:ExcelWriteCell Cell="O1" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="651.333333333333,86.6666666666667" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_9" SheetName="[SheetName]" Text="[&quot;FY &quot; + (in_CurrentYear - 1).ToString]" />
            <ui:ExcelWriteCell Cell="Q1" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="651.333333333333,86.6666666666667" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_10" SheetName="[SheetName]" Text="[&quot;FY &quot; + (in_CurrentYear - 2).ToString]" />
            <ui:ExcelWriteCell Cell="S1" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="651.333333333333,86.6666666666667" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_11" SheetName="[SheetName]" Text="[&quot;FY &quot; + (in_CurrentYear - 3).ToString]" />
            <ui:ExcelWriteCell Cell="U1" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="651.333333333333,86.6666666666667" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_12" SheetName="[SheetName]" Text="[&quot;FY &quot; + (in_CurrentYear - 4).ToString]" />
            <ui:ExcelWriteCell Cell="W1" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="651.333333333333,86.6666666666667" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_13" SheetName="[SheetName]" Text="[&quot;FY &quot; + (in_CurrentYear - 5).ToString]" />
            <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="651.333333333333,8119.33333333333" sap2010:WorkflowViewState.IdRef="ForEach`1_3" Values="[in_GOACodes]">
              <ui:ForEach.Body>
                <ActivityAction x:TypeArguments="x:Object">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="x:Object" Name="GOA" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="614.666666666667,7984" sap2010:WorkflowViewState.IdRef="Sequence_3">
                    <Sequence.Variables>
                      <Variable x:TypeArguments="x:String" Name="GOACell" />
                      <Variable x:TypeArguments="x:String" Name="GOARow" />
                      <Variable x:TypeArguments="x:Double" Name="CurrentPPB" />
                      <Variable x:TypeArguments="x:Double" Name="Calculation" />
                      <Variable x:TypeArguments="x:Int32" Name="PPBCount" />
                    </Sequence.Variables>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:ExcelLookUpRange DisplayName="LookUp Range" sap:VirtualizedContainerService.HintSize="572.666666666667,86.6666666666667" sap2010:WorkflowViewState.IdRef="ExcelLookUpRange_1" Range="A:W" Result="[GOACell]" SheetName="[SheetName]" Value="[GOA.toString]" />
                    <If Condition="[in_CY.ContainsKey(GOA.ToString)]" sap:VirtualizedContainerService.HintSize="572.666666666667,212.666666666667" sap2010:WorkflowViewState.IdRef="If_18">
                      <If.Then>
                        <Assign sap:VirtualizedContainerService.HintSize="262,62" sap2010:WorkflowViewState.IdRef="Assign_9">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Int32">[PPBCount]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Int32">[in_CY(GOA.ToString).Count]</InArgument>
                          </Assign.Value>
                        </Assign>
                      </If.Then>
                      <If.Else>
                        <Assign sap:VirtualizedContainerService.HintSize="262,62" sap2010:WorkflowViewState.IdRef="Assign_12">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Int32">[PPBCount]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Int32">1</InArgument>
                          </Assign.Value>
                        </Assign>
                      </If.Else>
                    </If>
                    <Assign sap:VirtualizedContainerService.HintSize="572.666666666667,62" sap2010:WorkflowViewState.IdRef="Assign_2">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[GOARow]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[GOACell.Substring(1)]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <DoWhile DisplayName="Do While" sap:VirtualizedContainerService.HintSize="572.666666666667,7410.66666666667" sap2010:WorkflowViewState.IdRef="DoWhile_1">
                      <DoWhile.Condition>
                        <mva:VisualBasicValue x:TypeArguments="x:Boolean" ExpressionText="PPBCount &gt; 0" sap2010:WorkflowViewState.IdRef="VisualBasicValue`1_1" />
                      </DoWhile.Condition>
                      <Sequence sap:VirtualizedContainerService.HintSize="526,7246" sap2010:WorkflowViewState.IdRef="Sequence_4">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:ExcelReadCell Cell="[&quot;F&quot; + GOARow]" DisplayName="Read Cell" sap:VirtualizedContainerService.HintSize="484,58.6666666666667" sap2010:WorkflowViewState.IdRef="ExcelReadCell_1" SheetName="[SheetName]">
                          <ui:ExcelReadCell.Result>
                            <OutArgument x:TypeArguments="x:Double">[CurrentPPB]</OutArgument>
                          </ui:ExcelReadCell.Result>
                        </ui:ExcelReadCell>
                        <If Condition="[in_CurAlotAmt.ContainsKey(GOA.ToString)]" sap:VirtualizedContainerService.HintSize="484,284.666666666667" sap2010:WorkflowViewState.IdRef="If_1">
                          <If.Else>
                            <InvokeMethod DisplayName="Invoke Method" sap:VirtualizedContainerService.HintSize="237.333333333333,134" sap2010:WorkflowViewState.IdRef="InvokeMethod_1" MethodName="Add">
                              <InvokeMethod.TargetObject>
                                <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Double)">[in_CurAlotAmt]</InArgument>
                              </InvokeMethod.TargetObject>
                              <InArgument x:TypeArguments="x:String">[GOA.ToString]</InArgument>
                              <InArgument x:TypeArguments="x:Int32">0</InArgument>
                            </InvokeMethod>
                          </If.Else>
                        </If>
                        <If Condition="[in_CY.ContainsKey(GOA.ToString)]" sap:VirtualizedContainerService.HintSize="484,284.666666666667" sap2010:WorkflowViewState.IdRef="If_14">
                          <If.Else>
                            <InvokeMethod DisplayName="Invoke Method" sap:VirtualizedContainerService.HintSize="237.333333333333,134" sap2010:WorkflowViewState.IdRef="InvokeMethod_14" MethodName="Add">
                              <InvokeMethod.TargetObject>
                                <InArgument x:TypeArguments="scg:Dictionary(x:String, scg:Dictionary(x:String, scg:Dictionary(x:Double, x:Double)))">[in_CY]</InArgument>
                              </InvokeMethod.TargetObject>
                              <InArgument x:TypeArguments="x:String">[GOA.ToString]</InArgument>
                              <InArgument x:TypeArguments="scg:Dictionary(x:String, scg:Dictionary(x:Double, x:Double))">[New Dictionary(Of String, Dictionary(Of Double, Double))]</InArgument>
                            </InvokeMethod>
                          </If.Else>
                        </If>
                        <If Condition="[in_CY(GOA.ToString).ContainsKey(CurrentPPB.toString)]" sap:VirtualizedContainerService.HintSize="484,284.666666666667" sap2010:WorkflowViewState.IdRef="If_15">
                          <If.Else>
                            <InvokeMethod DisplayName="Invoke Method" sap:VirtualizedContainerService.HintSize="237.333333333333,134" sap2010:WorkflowViewState.IdRef="InvokeMethod_15" MethodName="Add">
                              <InvokeMethod.TargetObject>
                                <InArgument x:TypeArguments="scg:Dictionary(x:String, scg:Dictionary(x:Double, x:Double))">[in_CY(GOA.toString)]</InArgument>
                              </InvokeMethod.TargetObject>
                              <InArgument x:TypeArguments="x:String">[CurrentPPB.ToString]</InArgument>
                              <InArgument x:TypeArguments="scg:Dictionary(x:Double, x:Double)">[New Dictionary(Of Double, Double)]</InArgument>
                            </InvokeMethod>
                          </If.Else>
                        </If>
                        <If Condition="[in_CY(GOA.ToString)(CurrentPPB.ToString).ContainsKey(CurrentYear)]" sap:VirtualizedContainerService.HintSize="484,284.666666666667" sap2010:WorkflowViewState.IdRef="If_2">
                          <If.Else>
                            <InvokeMethod DisplayName="Invoke Method" sap:VirtualizedContainerService.HintSize="237.333333333333,134" sap2010:WorkflowViewState.IdRef="InvokeMethod_2" MethodName="Add">
                              <InvokeMethod.TargetObject>
                                <InArgument x:TypeArguments="scg:Dictionary(x:Double, x:Double)">[in_CY(GOA.ToString)(CurrentPPB.ToString)]</InArgument>
                              </InvokeMethod.TargetObject>
                              <InArgument x:TypeArguments="x:Double">[CurrentYear]</InArgument>
                              <InArgument x:TypeArguments="x:Double">0</InArgument>
                            </InvokeMethod>
                          </If.Else>
                        </If>
                        <If Condition="[in_CY(GOA.ToString)(CurrentPPB.ToString).ContainsKey(CurrentYear - 1)]" sap:VirtualizedContainerService.HintSize="484,284.666666666667" sap2010:WorkflowViewState.IdRef="If_3">
                          <If.Else>
                            <InvokeMethod DisplayName="Invoke Method" sap:VirtualizedContainerService.HintSize="237.333333333333,134" sap2010:WorkflowViewState.IdRef="InvokeMethod_3" MethodName="Add">
                              <InvokeMethod.TargetObject>
                                <InArgument x:TypeArguments="scg:Dictionary(x:Double, x:Double)">[in_CY(GOA.ToString)(CurrentPPB.ToString)]</InArgument>
                              </InvokeMethod.TargetObject>
                              <InArgument x:TypeArguments="x:Double">[CurrentYear - 1]</InArgument>
                              <InArgument x:TypeArguments="x:Double">0</InArgument>
                            </InvokeMethod>
                          </If.Else>
                        </If>
                        <If Condition="[in_CY(GOA.ToString)(CurrentPPB.ToString).ContainsKey(CurrentYear - 2)]" sap:VirtualizedContainerService.HintSize="484,284.666666666667" sap2010:WorkflowViewState.IdRef="If_4">
                          <If.Else>
                            <InvokeMethod DisplayName="Invoke Method" sap:VirtualizedContainerService.HintSize="237.333333333333,134" sap2010:WorkflowViewState.IdRef="InvokeMethod_4" MethodName="Add">
                              <InvokeMethod.TargetObject>
                                <InArgument x:TypeArguments="scg:Dictionary(x:Double, x:Double)">[in_CY(GOA.ToString)(CurrentPPB.ToString)]</InArgument>
                              </InvokeMethod.TargetObject>
                              <InArgument x:TypeArguments="x:Double">[CurrentYear - 2]</InArgument>
                              <InArgument x:TypeArguments="x:Double">0</InArgument>
                            </InvokeMethod>
                          </If.Else>
                        </If>
                        <If Condition="[in_CY(GOA.ToString)(CurrentPPB.ToString).ContainsKey(CurrentYear - 3)]" sap:VirtualizedContainerService.HintSize="484,284.666666666667" sap2010:WorkflowViewState.IdRef="If_5">
                          <If.Else>
                            <InvokeMethod DisplayName="Invoke Method" sap:VirtualizedContainerService.HintSize="237.333333333333,134" sap2010:WorkflowViewState.IdRef="InvokeMethod_5" MethodName="Add">
                              <InvokeMethod.TargetObject>
                                <InArgument x:TypeArguments="scg:Dictionary(x:Double, x:Double)">[in_CY(GOA.ToString)(CurrentPPB.ToString)]</InArgument>
                              </InvokeMethod.TargetObject>
                              <InArgument x:TypeArguments="x:Double">[CurrentYear - 3]</InArgument>
                              <InArgument x:TypeArguments="x:Double">0</InArgument>
                            </InvokeMethod>
                          </If.Else>
                        </If>
                        <If Condition="[in_CY(GOA.ToString)(CurrentPPB.ToString).ContainsKey(CurrentYear - 4)]" sap:VirtualizedContainerService.HintSize="484,284.666666666667" sap2010:WorkflowViewState.IdRef="If_6">
                          <If.Else>
                            <InvokeMethod DisplayName="Invoke Method" sap:VirtualizedContainerService.HintSize="237.333333333333,134" sap2010:WorkflowViewState.IdRef="InvokeMethod_6" MethodName="Add">
                              <InvokeMethod.TargetObject>
                                <InArgument x:TypeArguments="scg:Dictionary(x:Double, x:Double)">[in_CY(GOA.ToString)(CurrentPPB.ToString)]</InArgument>
                              </InvokeMethod.TargetObject>
                              <InArgument x:TypeArguments="x:Double">[CurrentYear - 4]</InArgument>
                              <InArgument x:TypeArguments="x:Double">0</InArgument>
                            </InvokeMethod>
                          </If.Else>
                        </If>
                        <If Condition="[in_CY(GOA.ToString)(CurrentPPB.ToString).ContainsKey(CurrentYear - 5)]" sap:VirtualizedContainerService.HintSize="484,284.666666666667" sap2010:WorkflowViewState.IdRef="If_7">
                          <If.Else>
                            <InvokeMethod DisplayName="Invoke Method" sap:VirtualizedContainerService.HintSize="237.333333333333,134" sap2010:WorkflowViewState.IdRef="InvokeMethod_7" MethodName="Add">
                              <InvokeMethod.TargetObject>
                                <InArgument x:TypeArguments="scg:Dictionary(x:Double, x:Double)">[in_CY(GOA.ToString)(CurrentPPB.ToString)]</InArgument>
                              </InvokeMethod.TargetObject>
                              <InArgument x:TypeArguments="x:Double">[CurrentYear - 5]</InArgument>
                              <InArgument x:TypeArguments="x:Double">0</InArgument>
                            </InvokeMethod>
                          </If.Else>
                        </If>
                        <If Condition="[in_PY.ContainsKey(GOA.ToString)]" sap:VirtualizedContainerService.HintSize="484,284.666666666667" sap2010:WorkflowViewState.IdRef="If_16">
                          <If.Else>
                            <InvokeMethod DisplayName="Invoke Method" sap:VirtualizedContainerService.HintSize="237.333333333333,134" sap2010:WorkflowViewState.IdRef="InvokeMethod_16" MethodName="Add">
                              <InvokeMethod.TargetObject>
                                <InArgument x:TypeArguments="scg:Dictionary(x:String, scg:Dictionary(x:String, scg:Dictionary(x:Double, x:Double)))">[in_PY]</InArgument>
                              </InvokeMethod.TargetObject>
                              <InArgument x:TypeArguments="x:String">[GOA.ToString]</InArgument>
                              <InArgument x:TypeArguments="scg:Dictionary(x:String, scg:Dictionary(x:Double, x:Double))">[New Dictionary(Of String, Dictionary(Of Double, Double))]</InArgument>
                            </InvokeMethod>
                          </If.Else>
                        </If>
                        <If Condition="[in_PY(GOA.ToString).ContainsKey(CurrentPPB.toString)]" sap:VirtualizedContainerService.HintSize="484,284.666666666667" sap2010:WorkflowViewState.IdRef="If_17">
                          <If.Else>
                            <InvokeMethod DisplayName="Invoke Method" sap:VirtualizedContainerService.HintSize="237.333333333333,134" sap2010:WorkflowViewState.IdRef="InvokeMethod_17" MethodName="Add">
                              <InvokeMethod.TargetObject>
                                <InArgument x:TypeArguments="scg:Dictionary(x:String, scg:Dictionary(x:Double, x:Double))">[in_PY(GOA.toString)]</InArgument>
                              </InvokeMethod.TargetObject>
                              <InArgument x:TypeArguments="x:String">[CurrentPPB.ToString]</InArgument>
                              <InArgument x:TypeArguments="scg:Dictionary(x:Double, x:Double)">[New Dictionary(Of Double, Double)]</InArgument>
                            </InvokeMethod>
                          </If.Else>
                        </If>
                        <If Condition="[in_PY(GOA.ToString)(CurrentPPB.ToString).ContainsKey(CurrentYear)]" sap:VirtualizedContainerService.HintSize="484,284.666666666667" sap2010:WorkflowViewState.IdRef="If_8">
                          <If.Else>
                            <InvokeMethod DisplayName="Invoke Method" sap:VirtualizedContainerService.HintSize="237.333333333333,134" sap2010:WorkflowViewState.IdRef="InvokeMethod_8" MethodName="Add">
                              <InvokeMethod.TargetObject>
                                <InArgument x:TypeArguments="scg:Dictionary(x:Double, x:Double)">[in_PY(GOA.ToString)(CurrentPPB.ToString)]</InArgument>
                              </InvokeMethod.TargetObject>
                              <InArgument x:TypeArguments="x:Double">[CurrentYear]</InArgument>
                              <InArgument x:TypeArguments="x:Double">0</InArgument>
                            </InvokeMethod>
                          </If.Else>
                        </If>
                        <If Condition="[in_PY(GOA.ToString)(CurrentPPB.ToString).ContainsKey(CurrentYear - 1)]" sap:VirtualizedContainerService.HintSize="484,284.666666666667" sap2010:WorkflowViewState.IdRef="If_9">
                          <If.Else>
                            <InvokeMethod DisplayName="Invoke Method" sap:VirtualizedContainerService.HintSize="237.333333333333,134" sap2010:WorkflowViewState.IdRef="InvokeMethod_9" MethodName="Add">
                              <InvokeMethod.TargetObject>
                                <InArgument x:TypeArguments="scg:Dictionary(x:Double, x:Double)">[in_PY(GOA.ToString)(CurrentPPB.ToString)]</InArgument>
                              </InvokeMethod.TargetObject>
                              <InArgument x:TypeArguments="x:Double">[CurrentYear - 1]</InArgument>
                              <InArgument x:TypeArguments="x:Double">0</InArgument>
                            </InvokeMethod>
                          </If.Else>
                        </If>
                        <If Condition="[in_PY(GOA.ToString)(CurrentPPB.ToString).ContainsKey(CurrentYear - 2)]" sap:VirtualizedContainerService.HintSize="484,284.666666666667" sap2010:WorkflowViewState.IdRef="If_10">
                          <If.Else>
                            <InvokeMethod DisplayName="Invoke Method" sap:VirtualizedContainerService.HintSize="237.333333333333,134" sap2010:WorkflowViewState.IdRef="InvokeMethod_10" MethodName="Add">
                              <InvokeMethod.TargetObject>
                                <InArgument x:TypeArguments="scg:Dictionary(x:Double, x:Double)">[in_PY(GOA.ToString)(CurrentPPB.ToString)]</InArgument>
                              </InvokeMethod.TargetObject>
                              <InArgument x:TypeArguments="x:Double">[CurrentYear - 2]</InArgument>
                              <InArgument x:TypeArguments="x:Double">0</InArgument>
                            </InvokeMethod>
                          </If.Else>
                        </If>
                        <If Condition="[in_PY(GOA.ToString)(CurrentPPB.ToString).ContainsKey(CurrentYear - 3)]" sap:VirtualizedContainerService.HintSize="484,284.666666666667" sap2010:WorkflowViewState.IdRef="If_11">
                          <If.Else>
                            <InvokeMethod DisplayName="Invoke Method" sap:VirtualizedContainerService.HintSize="237.333333333333,134" sap2010:WorkflowViewState.IdRef="InvokeMethod_11" MethodName="Add">
                              <InvokeMethod.TargetObject>
                                <InArgument x:TypeArguments="scg:Dictionary(x:Double, x:Double)">[in_PY(GOA.ToString)(CurrentPPB.ToString)]</InArgument>
                              </InvokeMethod.TargetObject>
                              <InArgument x:TypeArguments="x:Double">[CurrentYear - 3]</InArgument>
                              <InArgument x:TypeArguments="x:Double">0</InArgument>
                            </InvokeMethod>
                          </If.Else>
                        </If>
                        <If Condition="[in_PY(GOA.ToString)(CurrentPPB.ToString).ContainsKey(CurrentYear - 4)]" sap:VirtualizedContainerService.HintSize="484,284.666666666667" sap2010:WorkflowViewState.IdRef="If_12">
                          <If.Else>
                            <InvokeMethod DisplayName="Invoke Method" sap:VirtualizedContainerService.HintSize="237.333333333333,134" sap2010:WorkflowViewState.IdRef="InvokeMethod_12" MethodName="Add">
                              <InvokeMethod.TargetObject>
                                <InArgument x:TypeArguments="scg:Dictionary(x:Double, x:Double)">[in_PY(GOA.ToString)(CurrentPPB.ToString)]</InArgument>
                              </InvokeMethod.TargetObject>
                              <InArgument x:TypeArguments="x:Double">[CurrentYear - 4]</InArgument>
                              <InArgument x:TypeArguments="x:Double">0</InArgument>
                            </InvokeMethod>
                          </If.Else>
                        </If>
                        <If Condition="[in_PY(GOA.ToString)(CurrentPPB.ToString).ContainsKey(CurrentYear - 5)]" sap:VirtualizedContainerService.HintSize="484,284.666666666667" sap2010:WorkflowViewState.IdRef="If_13">
                          <If.Else>
                            <InvokeMethod DisplayName="Invoke Method" sap:VirtualizedContainerService.HintSize="237.333333333333,134" sap2010:WorkflowViewState.IdRef="InvokeMethod_13" MethodName="Add">
                              <InvokeMethod.TargetObject>
                                <InArgument x:TypeArguments="scg:Dictionary(x:Double, x:Double)">[in_PY(GOA.ToString)(CurrentPPB.ToString)]</InArgument>
                              </InvokeMethod.TargetObject>
                              <InArgument x:TypeArguments="x:Double">[CurrentYear - 5]</InArgument>
                              <InArgument x:TypeArguments="x:Double">0</InArgument>
                            </InvokeMethod>
                          </If.Else>
                        </If>
                        <Assign sap:VirtualizedContainerService.HintSize="484,62" sap2010:WorkflowViewState.IdRef="Assign_3">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Double">[Calculation]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Double">[in_CurAlotAmt(GOA.ToString) - in_CY(GOA.ToString)(CurrentPPB.ToString)(CurrentYear)]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <ui:ExcelWriteCell Cell="[&quot;M&quot;+GOARow]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="484,86.6666666666667" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_1" SheetName="[SheetName]" Text="[&quot;=&quot; + in_CurAlotAmt(GOA.ToString).toString + &quot;-&quot; +  in_CY(GOA.ToString)(CurrentPPB.ToString)(CurrentYear).ToString]" />
                        <Assign sap:VirtualizedContainerService.HintSize="484,62" sap2010:WorkflowViewState.IdRef="Assign_4">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Double">[Calculation]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Double">[in_PY(GOA.ToString)(CurrentPPB.ToString)(CurrentYear - 1) - in_CY(GOA.ToString)(CurrentPPB.ToString)(CurrentYear - 1)]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <ui:ExcelWriteCell Cell="[&quot;O&quot;+GOARow]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="484,86.6666666666667" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_2" SheetName="[SheetName]" Text="[&quot;=&quot; + in_PY(GOA.ToString)(CurrentPPB.ToString)(CurrentYear - 1).toString +  &quot;-&quot; +  in_CY(GOA.ToString)(CurrentPPB.ToString)(CurrentYear - 1).toString]" />
                        <Assign sap:VirtualizedContainerService.HintSize="484,62" sap2010:WorkflowViewState.IdRef="Assign_5">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Double">[Calculation]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Double">[in_PY(GOA.ToString)(CurrentPPB.ToString)(CurrentYear - 2) - in_CY(GOA.ToString)(CurrentPPB.ToString)(CurrentYear - 2)]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <ui:ExcelWriteCell Cell="[&quot;Q&quot;+GOARow]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="484,86.6666666666667" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_3" SheetName="[SheetName]" Text="[&quot;=&quot; + in_PY(GOA.ToString)(CurrentPPB.ToString)(CurrentYear - 2).ToString + &quot;-&quot; + in_CY(GOA.ToString)(CurrentPPB.ToString)(CurrentYear - 2).ToString]" />
                        <Assign sap:VirtualizedContainerService.HintSize="484,62" sap2010:WorkflowViewState.IdRef="Assign_6">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Double">[Calculation]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Double">[in_PY(GOA.ToString)(CurrentPPB.ToString)(CurrentYear - 3) - in_CY(GOA.ToString)(CurrentPPB.ToString)(CurrentYear - 3)]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <ui:ExcelWriteCell Cell="[&quot;S&quot;+GOARow]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="484,86.6666666666667" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_4" SheetName="[SheetName]" Text="[&quot;=&quot; + in_PY(GOA.ToString)(CurrentPPB.ToString)(CurrentYear - 3).ToString + &quot;-&quot; + in_CY(GOA.ToString)(CurrentPPB.ToString)(CurrentYear - 3).ToString]" />
                        <Assign sap:VirtualizedContainerService.HintSize="484,62" sap2010:WorkflowViewState.IdRef="Assign_7">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Double">[Calculation]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Double">[in_PY(GOA.ToString)(CurrentPPB.ToString)(CurrentYear - 4) - in_CY(GOA.ToString)(CurrentPPB.ToString)(CurrentYear - 4)]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <ui:ExcelWriteCell Cell="[&quot;U&quot;+GOARow]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="484,86.6666666666667" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_5" SheetName="[SheetName]" Text="[&quot;=&quot; + in_PY(GOA.ToString)(CurrentPPB.ToString)(CurrentYear - 4).toString + &quot;-&quot; + in_CY(GOA.ToString)(CurrentPPB.ToString)(CurrentYear - 4).toString]" />
                        <Assign sap:VirtualizedContainerService.HintSize="484,62" sap2010:WorkflowViewState.IdRef="Assign_8">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Double">[Calculation]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Double">[in_PY(GOA.ToString)(CurrentPPB.ToString)(CurrentYear - 5) - in_CY(GOA.ToString)(CurrentPPB.ToString)(CurrentYear - 5)]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <ui:ExcelWriteCell Cell="[&quot;W&quot;+GOARow]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="484,86.6666666666667" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_6" SheetName="[SheetName]" Text="[&quot;=&quot; + in_PY(GOA.ToString)(CurrentPPB.ToString)(CurrentYear - 5).toString + &quot;-&quot; + in_CY(GOA.ToString)(CurrentPPB.ToString)(CurrentYear - 5).toString]" />
                        <Assign sap:VirtualizedContainerService.HintSize="484,62" sap2010:WorkflowViewState.IdRef="Assign_10">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[GOARow]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[(Cint(GOARow) + 1).ToString]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="484,62" sap2010:WorkflowViewState.IdRef="Assign_11">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Int32">[PPBCount]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Int32">[PPBCount - 1]</InArgument>
                          </Assign.Value>
                        </Assign>
                      </Sequence>
                    </DoWhile>
                  </Sequence>
                </ActivityAction>
              </ui:ForEach.Body>
            </ui:ForEach>
          </Sequence>
        </ActivityAction>
      </ui:ExcelApplicationScope.Body>
    </ui:ExcelApplicationScope>
  </Sequence>
</Activity>