<Activity mc:Ignorable="sap sap2010" x:Class="Main" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:sc="clr-namespace:System.Collections;assembly=mscorlib" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_TreasuryCodes" Type="InArgument(sc:ArrayList)" />
    <x:Property Name="in_GOACodes" Type="InArgument(sc:ArrayList)" />
    <x:Property Name="in_PPBCodes" Type="InArgument(sc:ArrayList)" />
    <x:Property Name="in_CY" Type="InArgument(scg:Dictionary(x:String, scg:Dictionary(x:String, scg:Dictionary(x:Double, x:Double))))" />
    <x:Property Name="in_PY" Type="InArgument(scg:Dictionary(x:String, scg:Dictionary(x:String, scg:Dictionary(x:Double, x:Double))))" />
    <x:Property Name="out_CurAlotAmt" Type="OutArgument(scg:Dictionary(x:String, x:Double))" />
    <x:Property Name="out_CY" Type="OutArgument(scg:Dictionary(x:String, scg:Dictionary(x:String, scg:Dictionary(x:Double, x:Double))))" />
    <x:Property Name="in_CurAlotAmt" Type="InArgument(scg:Dictionary(x:String, x:Double))" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1057.33333333333,9234</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ActivityBuilder_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="24">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="19">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="CY_RC-502 Data Retrieval" sap:VirtualizedContainerService.HintSize="1037.33333333333,9134" sap2010:WorkflowViewState.IdRef="Sequence_2">
    <Sequence.Variables>
      <Variable x:TypeArguments="sc:ArrayList" Default="[New ArrayList]" Name="TreasuryCodes" />
      <Variable x:TypeArguments="x:Int32" Default="1" Name="CodeCount" />
      <Variable x:TypeArguments="x:String" Default="C:\Users\pdolan\Documents\RD RC 502 as of 6.30.19.xlsx" Name="RC502FilePath" />
      <Variable x:TypeArguments="x:String" Default="RD RC 502 as of 6.30.19.xlsx" Name="RC502File" />
      <Variable x:TypeArguments="x:String" Default="RD RC 502 as of 6.30.19" Name="RC502FileName" />
      <Variable x:TypeArguments="x:String" Name="SheetName" />
      <Variable x:TypeArguments="ui:WorkbookApplication" Name="Workbook" />
      <Variable x:TypeArguments="sc:ArrayList" Name="GOACodes" />
      <Variable x:TypeArguments="sc:ArrayList" Name="PPBCodes" />
      <Variable x:TypeArguments="x:Double" Name="CurrentOblAmt" />
      <Variable x:TypeArguments="scg:Dictionary(x:String, x:Double)" Name="CurAlotAmt" />
      <Variable x:TypeArguments="scg:Dictionary(x:String, scg:Dictionary(x:String, scg:Dictionary(x:Double, x:Double)))" Default="[New Dictionary(Of String, Dictionary(Of String, Dictionary(Of Double, Double)))]" Name="CY" />
      <Variable x:TypeArguments="x:Double" Name="AlotAmt" />
      <Variable x:TypeArguments="x:Double" Name="CurrentPPB" />
      <Variable x:TypeArguments="x:Double" Name="CurrentFY" />
      <Variable x:TypeArguments="x:String" Name="CurrentGOA" />
      <Variable x:TypeArguments="x:Int32" Default="2019" Name="CurrentYear" />
      <Variable x:TypeArguments="s:Int32[]" Default="[{2019, 2018, 2017, 2016, 2015, 2014}]" Name="Years" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="995.333333333333,9042" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_1" Workbook="[Workbook]" WorkbookPath="[RC502FilePath]">
      <ui:ExcelApplicationScope.Body>
        <ActivityAction x:TypeArguments="ui:WorkbookApplication">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
          </ActivityAction.Argument>
          <Sequence sap:VirtualizedContainerService.HintSize="961.333333333333,8933.33333333333" sap2010:WorkflowViewState.IdRef="Sequence_20">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="919.333333333333,8637.33333333333" sap2010:WorkflowViewState.IdRef="Sequence_1">
              <Sequence.Variables>
                <Variable x:TypeArguments="x:Boolean" Name="SortError" />
                <Variable x:TypeArguments="sd:DataTable" Name="ResultsTable" />
                <Variable x:TypeArguments="scg:IEnumerable(x:Object)" Name="rowValues" />
                <Variable x:TypeArguments="x:String" Name="ResultsRow" />
                <Variable x:TypeArguments="x:Int32" Name="StartCell" />
                <Variable x:TypeArguments="x:Int32" Name="CurrentRow" />
                <Variable x:TypeArguments="x:Boolean" Name="FilterOn" />
              </Sequence.Variables>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Assign sap:VirtualizedContainerService.HintSize="877.333333333333,62" sap2010:WorkflowViewState.IdRef="Assign_3">
                <Assign.To>
                  <OutArgument x:TypeArguments="sc:ArrayList">[TreasuryCodes]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="sc:ArrayList">[in_TreasuryCodes]</InArgument>
                </Assign.Value>
              </Assign>
              <Assign sap:VirtualizedContainerService.HintSize="877.333333333333,62" sap2010:WorkflowViewState.IdRef="Assign_4">
                <Assign.To>
                  <OutArgument x:TypeArguments="sc:ArrayList">[GOACodes]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="sc:ArrayList">[in_GOACodes]</InArgument>
                </Assign.Value>
              </Assign>
              <Assign sap:VirtualizedContainerService.HintSize="877.333333333333,62" sap2010:WorkflowViewState.IdRef="Assign_14">
                <Assign.To>
                  <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:Double)">[CurAlotAmt]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Double)">[in_CurAlotAmt]</InArgument>
                </Assign.Value>
              </Assign>
              <Assign sap:VirtualizedContainerService.HintSize="877.333333333333,62" sap2010:WorkflowViewState.IdRef="Assign_5">
                <Assign.To>
                  <OutArgument x:TypeArguments="sc:ArrayList">[PPBCodes]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="sc:ArrayList">[in_PPBCodes]</InArgument>
                </Assign.Value>
              </Assign>
              <Assign sap:VirtualizedContainerService.HintSize="877.333333333333,62" sap2010:WorkflowViewState.IdRef="Assign_2">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[SheetName]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[Workbook.GetWorkbookSheet(0)]</InArgument>
                </Assign.Value>
              </Assign>
              <Assign sap:VirtualizedContainerService.HintSize="877.333333333333,62" sap2010:WorkflowViewState.IdRef="Assign_11">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[RC502FileName]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[SheetName]</InArgument>
                </Assign.Value>
              </Assign>
              <Assign sap:VirtualizedContainerService.HintSize="877.333333333333,62" sap2010:WorkflowViewState.IdRef="Assign_12">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[RC502File]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[SheetName + ".xlsx"]</InArgument>
                </Assign.Value>
              </Assign>
              <ui:SendHotkey ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" SpecialKey="{x:Null}" Activate="True" DisplayName="Send Hotkey 'tab  RD RC 502 Sep 2019'" sap:VirtualizedContainerService.HintSize="877.333333333333,155.333333333333" sap2010:WorkflowViewState.IdRef="SendHotkey_5" Key="f" KeyModifiers="Ctrl">
                <ui:SendHotkey.Target>
                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="80b8838fcb209723b5a9d6b2990d1ca3" Selector="[&quot;&lt;wnd app='excel.exe' cls='XLMAIN' title='&quot; + RC502FileName + &quot; - Excel' /&gt;&lt;uia automationid='&quot; + RC502File + &quot;' cls='ExcelGrid' name='&quot; + RC502FileName + &quot;' /&gt;&quot;]">
                    <ui:Target.TimeoutMS>
                      <InArgument x:TypeArguments="x:Int32" />
                    </ui:Target.TimeoutMS>
                    <ui:Target.WaitForReady>
                      <InArgument x:TypeArguments="ui:WaitForReady" />
                    </ui:Target.WaitForReady>
                  </ui:Target>
                </ui:SendHotkey.Target>
              </ui:SendHotkey>
              <ui:TypeInto AlterIfDisabled="{x:Null}" ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" SimulateType="{x:Null}" Activate="True" DisplayName="Type Into 'EDTBX'" sap:VirtualizedContainerService.HintSize="877.333333333333,134" sap2010:WorkflowViewState.IdRef="TypeInto_17" Text="Trsry[k(enter)]">
                <ui:TypeInto.Target>
                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="2b473fd040458cf7418f7593b6e72915" Selector="&lt;wnd app='excel.exe' cls='bosa_sdm_XL9' title='Find and Replace' /&gt;&lt;wnd cls='EDTBX' idx='1' /&gt;">
                    <ui:Target.TimeoutMS>
                      <InArgument x:TypeArguments="x:Int32" />
                    </ui:Target.TimeoutMS>
                    <ui:Target.WaitForReady>
                      <InArgument x:TypeArguments="ui:WaitForReady" />
                    </ui:Target.WaitForReady>
                  </ui:Target>
                </ui:TypeInto.Target>
              </ui:TypeInto>
              <ui:Click AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'push button  Close'" sap:VirtualizedContainerService.HintSize="877.333333333333,106" sap2010:WorkflowViewState.IdRef="Click_18" KeyModifiers="None" MouseButton="BTN_LEFT">
                <ui:Click.CursorPosition>
                  <ui:CursorPosition Position="Center">
                    <ui:CursorPosition.OffsetX>
                      <InArgument x:TypeArguments="x:Int32" />
                    </ui:CursorPosition.OffsetX>
                    <ui:CursorPosition.OffsetY>
                      <InArgument x:TypeArguments="x:Int32" />
                    </ui:CursorPosition.OffsetY>
                  </ui:CursorPosition>
                </ui:Click.CursorPosition>
                <ui:Click.Target>
                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="9879af47199e2754df65f666c5d19b86" Selector="&lt;wnd app='excel.exe' cls='bosa_sdm_XL9' title='Find and Replace' /&gt;&lt;ctrl idx='2' name='Close' role='push button' /&gt;">
                    <ui:Target.TimeoutMS>
                      <InArgument x:TypeArguments="x:Int32" />
                    </ui:Target.TimeoutMS>
                    <ui:Target.WaitForReady>
                      <InArgument x:TypeArguments="ui:WaitForReady" />
                    </ui:Target.WaitForReady>
                  </ui:Target>
                </ui:Click.Target>
              </ui:Click>
              <ui:SendHotkey ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" SpecialKey="{x:Null}" Activate="True" DisplayName="Send Hotkey 'tab  RD RC 502 Sep 2019'" sap:VirtualizedContainerService.HintSize="877.333333333333,155.333333333333" sap2010:WorkflowViewState.IdRef="SendHotkey_4" Key="l" KeyModifiers="Ctrl, Shift">
                <ui:SendHotkey.Target>
                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="80b8838fcb209723b5a9d6b2990d1ca3" Selector="[&quot;&lt;wnd app='excel.exe' cls='XLMAIN' title='&quot; + RC502FileName +&quot; - Excel' /&gt;&lt;uia automationid='&quot; + RC502File + &quot;' cls='ExcelGrid' name='&quot; + RC502FileName +&quot;' /&gt;&quot;]">
                    <ui:Target.TimeoutMS>
                      <InArgument x:TypeArguments="x:Int32" />
                    </ui:Target.TimeoutMS>
                    <ui:Target.WaitForReady>
                      <InArgument x:TypeArguments="ui:WaitForReady" />
                    </ui:Target.WaitForReady>
                  </ui:Target>
                </ui:SendHotkey.Target>
              </ui:SendHotkey>
              <ui:Click AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'item  &quot;C&quot; 1'" sap:VirtualizedContainerService.HintSize="877.333333333333,106" sap2010:WorkflowViewState.IdRef="Click_39" KeyModifiers="None" MouseButton="BTN_LEFT">
                <ui:Click.CursorPosition>
                  <ui:CursorPosition Position="Center">
                    <ui:CursorPosition.OffsetX>
                      <InArgument x:TypeArguments="x:Int32" />
                    </ui:CursorPosition.OffsetX>
                    <ui:CursorPosition.OffsetY>
                      <InArgument x:TypeArguments="x:Int32" />
                    </ui:CursorPosition.OffsetY>
                  </ui:CursorPosition>
                </ui:Click.CursorPosition>
                <ui:Click.Target>
                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="2ed36e7efd81487bdfe4cba6c0f51f88" Selector="&lt;wnd app='excel.exe' cls='XLMAIN' title='RD RC 502 as of 6.30.19 - Excel' /&gt;&lt;uia automationid='RD RC 502 as of 6.30.19.xlsx' cls='ExcelGrid' name='RD RC 502 as of 6.30.19' /&gt;&lt;uia automationid='Grid' name='Grid' role='data grid' /&gt;&lt;uia name='&amp;quot;E&amp;quot; 1' role='item' tableCol='5' tableRow='1' /&gt;">
                    <ui:Target.TimeoutMS>
                      <InArgument x:TypeArguments="x:Int32" />
                    </ui:Target.TimeoutMS>
                    <ui:Target.WaitForReady>
                      <InArgument x:TypeArguments="ui:WaitForReady" />
                    </ui:Target.WaitForReady>
                  </ui:Target>
                </ui:Click.Target>
              </ui:Click>
              <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="877.333333333333,1154" sap2010:WorkflowViewState.IdRef="CommentOut_3">
                <ui:CommentOut.Body>
                  <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="834.666666666667,1075.33333333333" sap2010:WorkflowViewState.IdRef="Sequence_40">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:ForEach x:TypeArguments="x:Int32" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="792.666666666667,983.333333333333" sap2010:WorkflowViewState.IdRef="ForEach`1_6" Values="[Years]">
                      <ui:ForEach.Body>
                        <ActivityAction x:TypeArguments="x:Int32">
                          <ActivityAction.Argument>
                            <DelegateInArgument x:TypeArguments="x:Int32" Name="year" />
                          </ActivityAction.Argument>
                          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="756,848" sap2010:WorkflowViewState.IdRef="Sequence_37">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:SendHotkey ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" Activate="True" DisplayName="Send Hotkey 'item  &quot;E&quot; 1'" sap:VirtualizedContainerService.HintSize="714,155.333333333333" sap2010:WorkflowViewState.IdRef="SendHotkey_9" Key="down" KeyModifiers="Alt" SpecialKey="True">
                              <ui:SendHotkey.Target>
                                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="2ed36e7efd81487bdfe4cba6c0f51f88" Selector="&lt;wnd app='excel.exe' cls='XLMAIN' title='RD RC 502 as of 6.30.19 - Excel' /&gt;&lt;uia automationid='RD RC 502 as of 6.30.19.xlsx' cls='ExcelGrid' name='RD RC 502 as of 6.30.19' /&gt;&lt;uia automationid='Grid' name='Grid' role='data grid' /&gt;&lt;uia name='&amp;quot;E&amp;quot; 1' role='item' tableCol='5' tableRow='1' /&gt;">
                                  <ui:Target.TimeoutMS>
                                    <InArgument x:TypeArguments="x:Int32" />
                                  </ui:Target.TimeoutMS>
                                  <ui:Target.WaitForReady>
                                    <InArgument x:TypeArguments="ui:WaitForReady" />
                                  </ui:Target.WaitForReady>
                                </ui:Target>
                              </ui:SendHotkey.Target>
                            </ui:SendHotkey>
                            <ui:TypeInto AlterIfDisabled="{x:Null}" ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" SimulateType="{x:Null}" Activate="True" DisplayName="Type Into 'RICHEDIT60W'" sap:VirtualizedContainerService.HintSize="714,134" sap2010:WorkflowViewState.IdRef="TypeInto_46" Text="[year.toString]">
                              <ui:TypeInto.Target>
                                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="dd519ae4940d65094247bac80ef76c3d" Selector="&lt;wnd app='excel.exe' cls='Net UI Tool Window' idx='*' /&gt;&lt;wnd cls='RICHEDIT60W' /&gt;">
                                  <ui:Target.TimeoutMS>
                                    <InArgument x:TypeArguments="x:Int32" />
                                  </ui:Target.TimeoutMS>
                                  <ui:Target.WaitForReady>
                                    <InArgument x:TypeArguments="ui:WaitForReady" />
                                  </ui:Target.WaitForReady>
                                </ui:Target>
                              </ui:TypeInto.Target>
                            </ui:TypeInto>
                            <If Condition="[CodeCount = 1]" sap:VirtualizedContainerService.HintSize="714,284.666666666667" sap2010:WorkflowViewState.IdRef="If_15">
                              <If.Then>
                                <ui:TypeInto AlterIfDisabled="{x:Null}" ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" SimulateType="{x:Null}" Activate="True" DisplayName="Type Into 'RICHEDIT60W'" sap:VirtualizedContainerService.HintSize="334,134" sap2010:WorkflowViewState.IdRef="TypeInto_45" Text="%[k(enter)]">
                                  <ui:TypeInto.Target>
                                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="dd519ae4940d65094247bac80ef76c3d" Selector="&lt;wnd app='excel.exe' cls='Net UI Tool Window' idx='*' /&gt;&lt;wnd cls='RICHEDIT60W' /&gt;">
                                      <ui:Target.TimeoutMS>
                                        <InArgument x:TypeArguments="x:Int32" />
                                      </ui:Target.TimeoutMS>
                                      <ui:Target.WaitForReady>
                                        <InArgument x:TypeArguments="ui:WaitForReady" />
                                      </ui:Target.WaitForReady>
                                    </ui:Target>
                                  </ui:TypeInto.Target>
                                </ui:TypeInto>
                              </If.Then>
                              <If.Else>
                                <ui:TypeInto AlterIfDisabled="{x:Null}" ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" SimulateType="{x:Null}" Activate="True" DisplayName="Type Into 'RICHEDIT60W'" sap:VirtualizedContainerService.HintSize="334,134" sap2010:WorkflowViewState.IdRef="TypeInto_44" Text="%[k(down)][k(down)][k(down)] [k(enter)]">
                                  <ui:TypeInto.Target>
                                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="dd519ae4940d65094247bac80ef76c3d" Selector="&lt;wnd app='excel.exe' cls='Net UI Tool Window' idx='*' /&gt;&lt;wnd cls='RICHEDIT60W' /&gt;">
                                      <ui:Target.TimeoutMS>
                                        <InArgument x:TypeArguments="x:Int32" />
                                      </ui:Target.TimeoutMS>
                                      <ui:Target.WaitForReady>
                                        <InArgument x:TypeArguments="ui:WaitForReady" />
                                      </ui:Target.WaitForReady>
                                    </ui:Target>
                                  </ui:TypeInto.Target>
                                </ui:TypeInto>
                              </If.Else>
                            </If>
                            <Assign sap:VirtualizedContainerService.HintSize="714,62" sap2010:WorkflowViewState.IdRef="Assign_23">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:Int32">[CodeCount]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:Int32">[CodeCount + 1]</InArgument>
                              </Assign.Value>
                            </Assign>
                          </Sequence>
                        </ActivityAction>
                      </ui:ForEach.Body>
                    </ui:ForEach>
                  </Sequence>
                </ui:CommentOut.Body>
              </ui:CommentOut>
              <Assign sap:VirtualizedContainerService.HintSize="877.333333333333,62" sap2010:WorkflowViewState.IdRef="Assign_17">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:Int32">[CodeCount]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:Int32">1</InArgument>
                </Assign.Value>
              </Assign>
              <ui:Click AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'item  &quot;K&quot; 1'" sap:VirtualizedContainerService.HintSize="877.333333333333,106" sap2010:WorkflowViewState.IdRef="Click_41" KeyModifiers="None" MouseButton="BTN_LEFT">
                <ui:Click.CursorPosition>
                  <ui:CursorPosition Position="Center">
                    <ui:CursorPosition.OffsetX>
                      <InArgument x:TypeArguments="x:Int32" />
                    </ui:CursorPosition.OffsetX>
                    <ui:CursorPosition.OffsetY>
                      <InArgument x:TypeArguments="x:Int32" />
                    </ui:CursorPosition.OffsetY>
                  </ui:CursorPosition>
                </ui:Click.CursorPosition>
                <ui:Click.Target>
                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="38f849fb8fc4920eb2529b4daf55bbba" Selector="&lt;wnd app='excel.exe' cls='XLMAIN' title='RD RC 502 as of 6.30.19 - Excel' /&gt;&lt;uia automationid='RD RC 502 as of 6.30.19.xlsx' cls='ExcelGrid' name='RD RC 502 as of 6.30.19' /&gt;&lt;uia automationid='Grid' name='Grid' role='data grid' /&gt;&lt;uia name='&amp;quot;K&amp;quot; 1' role='item' tableCol='11' tableRow='1' /&gt;">
                    <ui:Target.TimeoutMS>
                      <InArgument x:TypeArguments="x:Int32" />
                    </ui:Target.TimeoutMS>
                    <ui:Target.WaitForReady>
                      <InArgument x:TypeArguments="ui:WaitForReady" />
                    </ui:Target.WaitForReady>
                  </ui:Target>
                </ui:Click.Target>
              </ui:Click>
              <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="877.333333333333,983.333333333333" sap2010:WorkflowViewState.IdRef="ForEach`1_4" Values="[TreasuryCodes]">
                <ui:ForEach.Body>
                  <ActivityAction x:TypeArguments="x:Object">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="x:Object" Name="code" />
                    </ActivityAction.Argument>
                    <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="756,848" sap2010:WorkflowViewState.IdRef="Sequence_3">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:SendHotkey ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" Activate="True" DisplayName="Send Hotkey 'item  &quot;K&quot; 1'" sap:VirtualizedContainerService.HintSize="714,155.333333333333" sap2010:WorkflowViewState.IdRef="SendHotkey_2" Key="down" KeyModifiers="Alt" SpecialKey="True">
                        <ui:SendHotkey.Target>
                          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="167f8802c6b2a9084f409e47357e6637" Selector="[&quot;&lt;wnd app='excel.exe' cls='XLMAIN' title='&quot; +RC502FileName +&quot; - Excel' /&gt;&lt;uia automationid='&quot; + RC502File +&quot;' cls='ExcelGrid' name='&quot; + RC502FileName + &quot;' /&gt;&lt;uia automationid='Grid' name='Grid' role='data grid' /&gt;&lt;uia name='&amp;quot;K&amp;quot; 1' role='item' tableCol='11' tableRow='1' /&gt;&quot;]">
                            <ui:Target.TimeoutMS>
                              <InArgument x:TypeArguments="x:Int32" />
                            </ui:Target.TimeoutMS>
                            <ui:Target.WaitForReady>
                              <InArgument x:TypeArguments="ui:WaitForReady" />
                            </ui:Target.WaitForReady>
                          </ui:Target>
                        </ui:SendHotkey.Target>
                      </ui:SendHotkey>
                      <ui:TypeInto AlterIfDisabled="{x:Null}" ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" SimulateType="{x:Null}" Activate="True" DelayBetweenKeys="10" DisplayName="Type Into 'menu item  Sort A to Z'" sap:VirtualizedContainerService.HintSize="714,134" sap2010:WorkflowViewState.IdRef="TypeInto_1" Text="[code.ToString]">
                        <ui:TypeInto.Target>
                          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="01e02e24b7507624bbcf03daf21d57b9" Selector="&lt;wnd app='excel.exe' cls='Net UI Tool Window' idx='*' /&gt;&lt;wnd cls='RICHEDIT60W' /&gt;">
                            <ui:Target.TimeoutMS>
                              <InArgument x:TypeArguments="x:Int32" />
                            </ui:Target.TimeoutMS>
                            <ui:Target.WaitForReady>
                              <InArgument x:TypeArguments="ui:WaitForReady" />
                            </ui:Target.WaitForReady>
                          </ui:Target>
                        </ui:TypeInto.Target>
                      </ui:TypeInto>
                      <If Condition="[CodeCount = 1]" sap:VirtualizedContainerService.HintSize="714,284.666666666667" sap2010:WorkflowViewState.IdRef="If_1">
                        <If.Then>
                          <ui:TypeInto AlterIfDisabled="{x:Null}" ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" SimulateType="{x:Null}" Activate="True" DelayBetweenKeys="10" DisplayName="Type Into 'menu item  Sort A to Z'" sap:VirtualizedContainerService.HintSize="334,134" sap2010:WorkflowViewState.IdRef="TypeInto_2" Text="%[k(enter)]">
                            <ui:TypeInto.Target>
                              <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="01e02e24b7507624bbcf03daf21d57b9" Selector="&lt;wnd app='excel.exe' cls='Net UI Tool Window' idx='*' /&gt;&lt;wnd cls='RICHEDIT60W' /&gt;">
                                <ui:Target.TimeoutMS>
                                  <InArgument x:TypeArguments="x:Int32" />
                                </ui:Target.TimeoutMS>
                                <ui:Target.WaitForReady>
                                  <InArgument x:TypeArguments="ui:WaitForReady" />
                                </ui:Target.WaitForReady>
                              </ui:Target>
                            </ui:TypeInto.Target>
                          </ui:TypeInto>
                        </If.Then>
                        <If.Else>
                          <ui:TypeInto AlterIfDisabled="{x:Null}" ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" SimulateType="{x:Null}" Activate="True" DelayBetweenKeys="10" DisplayName="Type Into 'menu item  Sort A to Z'" sap:VirtualizedContainerService.HintSize="334,134" sap2010:WorkflowViewState.IdRef="TypeInto_3" Text="%[k(down)][k(down)][k(down)] [k(enter)]">
                            <ui:TypeInto.Target>
                              <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="01e02e24b7507624bbcf03daf21d57b9" Selector="&lt;wnd app='excel.exe' cls='Net UI Tool Window' idx='*' /&gt;&lt;wnd cls='RICHEDIT60W' /&gt;">
                                <ui:Target.TimeoutMS>
                                  <InArgument x:TypeArguments="x:Int32" />
                                </ui:Target.TimeoutMS>
                                <ui:Target.WaitForReady>
                                  <InArgument x:TypeArguments="ui:WaitForReady" />
                                </ui:Target.WaitForReady>
                              </ui:Target>
                            </ui:TypeInto.Target>
                          </ui:TypeInto>
                        </If.Else>
                      </If>
                      <Assign sap:VirtualizedContainerService.HintSize="714,62" sap2010:WorkflowViewState.IdRef="Assign_1">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:Int32">[CodeCount]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:Int32">[CodeCount + 1]</InArgument>
                        </Assign.Value>
                      </Assign>
                    </Sequence>
                  </ActivityAction>
                </ui:ForEach.Body>
              </ui:ForEach>
              <ui:Click AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'item  &quot;C&quot; 1'" sap:VirtualizedContainerService.HintSize="877.333333333333,106" sap2010:WorkflowViewState.IdRef="Click_37" KeyModifiers="None" MouseButton="BTN_LEFT">
                <ui:Click.CursorPosition>
                  <ui:CursorPosition Position="Center">
                    <ui:CursorPosition.OffsetX>
                      <InArgument x:TypeArguments="x:Int32" />
                    </ui:CursorPosition.OffsetX>
                    <ui:CursorPosition.OffsetY>
                      <InArgument x:TypeArguments="x:Int32" />
                    </ui:CursorPosition.OffsetY>
                  </ui:CursorPosition>
                </ui:Click.CursorPosition>
                <ui:Click.Target>
                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="1aec0accde9b56dad25813e444b7a0c5" Selector="&lt;wnd app='excel.exe' cls='XLMAIN' title='RD RC 502 as of 6.30.19 - Excel' /&gt;&lt;uia automationid='RD RC 502 as of 6.30.19.xlsx' cls='ExcelGrid' name='RD RC 502 as of 6.30.19' /&gt;&lt;uia automationid='Grid' name='Grid' role='data grid' /&gt;&lt;uia name='&amp;quot;C&amp;quot; 1' role='item' tableCol='3' tableRow='1' /&gt;">
                    <ui:Target.TimeoutMS>
                      <InArgument x:TypeArguments="x:Int32" />
                    </ui:Target.TimeoutMS>
                    <ui:Target.WaitForReady>
                      <InArgument x:TypeArguments="ui:WaitForReady" />
                    </ui:Target.WaitForReady>
                  </ui:Target>
                </ui:Click.Target>
              </ui:Click>
              <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="877.333333333333,4363.33333333333" sap2010:WorkflowViewState.IdRef="ForEach`1_5" Values="[GOACodes]">
                <ui:ForEach.Body>
                  <ActivityAction x:TypeArguments="x:Object">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="x:Object" Name="GOA" />
                    </ActivityAction.Argument>
                    <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="840.666666666667,4228" sap2010:WorkflowViewState.IdRef="Sequence_28">
                      <Sequence.Variables>
                        <Variable x:TypeArguments="x:String" Name="ActiveRowCell" />
                      </Sequence.Variables>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:SendHotkey ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" Activate="True" DisplayName="Send Hotkey 'item  &quot;C&quot; 1'" sap:VirtualizedContainerService.HintSize="798.666666666667,155.333333333333" sap2010:WorkflowViewState.IdRef="SendHotkey_7" Key="down" KeyModifiers="Alt" SpecialKey="True">
                        <ui:SendHotkey.Target>
                          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="1aec0accde9b56dad25813e444b7a0c5" Selector="&lt;wnd app='excel.exe' cls='XLMAIN' title='RD RC 502 as of 6.30.19 - Excel' /&gt;&lt;uia automationid='RD RC 502 as of 6.30.19.xlsx' cls='ExcelGrid' name='RD RC 502 as of 6.30.19' /&gt;&lt;uia automationid='Grid' name='Grid' role='data grid' /&gt;&lt;uia name='&amp;quot;C&amp;quot; 1' role='item' tableCol='3' tableRow='1' /&gt;">
                            <ui:Target.TimeoutMS>
                              <InArgument x:TypeArguments="x:Int32" />
                            </ui:Target.TimeoutMS>
                            <ui:Target.WaitForReady>
                              <InArgument x:TypeArguments="ui:WaitForReady" />
                            </ui:Target.WaitForReady>
                          </ui:Target>
                        </ui:SendHotkey.Target>
                      </ui:SendHotkey>
                      <ui:TypeInto AlterIfDisabled="{x:Null}" ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" SimulateType="{x:Null}" Activate="True" DelayBetweenKeys="10" DisplayName="Type Into 'menu item  Sort A to Z'" sap:VirtualizedContainerService.HintSize="798.666666666667,134" sap2010:WorkflowViewState.IdRef="TypeInto_37" Text="[GOA.ToString]">
                        <ui:TypeInto.Target>
                          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="01e02e24b7507624bbcf03daf21d57b9" Selector="&lt;wnd app='excel.exe' cls='Net UI Tool Window' idx='*' /&gt;&lt;wnd cls='RICHEDIT60W' /&gt;">
                            <ui:Target.TimeoutMS>
                              <InArgument x:TypeArguments="x:Int32" />
                            </ui:Target.TimeoutMS>
                            <ui:Target.WaitForReady>
                              <InArgument x:TypeArguments="ui:WaitForReady" />
                            </ui:Target.WaitForReady>
                          </ui:Target>
                        </ui:TypeInto.Target>
                      </ui:TypeInto>
                      <ui:TypeInto AlterIfDisabled="{x:Null}" ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" SimulateType="{x:Null}" Activate="True" DelayBetweenKeys="10" DisplayName="Type Into 'menu item  Sort A to Z'" sap:VirtualizedContainerService.HintSize="798.666666666667,134" sap2010:WorkflowViewState.IdRef="TypeInto_38" Text="%[k(enter)]">
                        <ui:TypeInto.Target>
                          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="01e02e24b7507624bbcf03daf21d57b9" Selector="&lt;wnd app='excel.exe' cls='Net UI Tool Window' idx='*' /&gt;&lt;wnd cls='RICHEDIT60W' /&gt;">
                            <ui:Target.TimeoutMS>
                              <InArgument x:TypeArguments="x:Int32" />
                            </ui:Target.TimeoutMS>
                            <ui:Target.WaitForReady>
                              <InArgument x:TypeArguments="ui:WaitForReady" />
                            </ui:Target.WaitForReady>
                          </ui:Target>
                        </ui:TypeInto.Target>
                      </ui:TypeInto>
                      <ui:TypeInto AlterIfDisabled="{x:Null}" ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" SimulateType="{x:Null}" Activate="True" DisplayName="Type Into 'item  &quot;C&quot; 1'" sap:VirtualizedContainerService.HintSize="798.666666666667,134" sap2010:WorkflowViewState.IdRef="TypeInto_42" Text="%[k(down)]">
                        <ui:TypeInto.Target>
                          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="5851f818ff6ad13dfee05fdda88670c3" Selector="&lt;wnd app='excel.exe' cls='XLMAIN' title='RD RC 502 as of 6.30.19 - Excel' /&gt;&lt;uia automationid='RD RC 502 as of 6.30.19.xlsx' cls='ExcelGrid' name='RD RC 502 as of 6.30.19' /&gt;&lt;uia automationid='Grid' name='Grid' role='data grid' /&gt;&lt;uia name='&amp;quot;C&amp;quot; 1' role='item' tableCol='3' tableRow='1' /&gt;">
                            <ui:Target.TimeoutMS>
                              <InArgument x:TypeArguments="x:Int32" />
                            </ui:Target.TimeoutMS>
                            <ui:Target.WaitForReady>
                              <InArgument x:TypeArguments="ui:WaitForReady" />
                            </ui:Target.WaitForReady>
                          </ui:Target>
                        </ui:TypeInto.Target>
                      </ui:TypeInto>
                      <ui:ExcelLookUpRange DisplayName="LookUp Range" sap:VirtualizedContainerService.HintSize="798.666666666667,86.6666666666667" sap2010:WorkflowViewState.IdRef="ExcelLookUpRange_2" Range="A:K" Result="[ResultsRow]" SheetName="[SheetName]" Value="[GOA.ToString]" />
                      <Assign sap:VirtualizedContainerService.HintSize="798.666666666667,62" sap2010:WorkflowViewState.IdRef="Assign_20">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:Int32">[CurrentRow]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:Int32">[CInt(ResultsRow.Substring(1))]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <ui:ExcelReadCell Cell="[&quot;C&quot; + CurrentRow.ToString]" DisplayName="Read Cell" sap:VirtualizedContainerService.HintSize="798.666666666667,58.6666666666667" sap2010:WorkflowViewState.IdRef="ExcelReadCell_10" SheetName="[SheetName]">
                        <ui:ExcelReadCell.Result>
                          <OutArgument x:TypeArguments="x:String">[ActiveRowCell]</OutArgument>
                        </ui:ExcelReadCell.Result>
                      </ui:ExcelReadCell>
                      <DoWhile DisplayName="Do While" sap:VirtualizedContainerService.HintSize="798.666666666667,2700.66666666667" sap2010:WorkflowViewState.IdRef="DoWhile_2">
                        <DoWhile.Condition>
                          <mva:VisualBasicValue x:TypeArguments="x:Boolean" ExpressionText="CurrentGOA = ActiveRowCell" sap2010:WorkflowViewState.IdRef="VisualBasicValue`1_2" />
                        </DoWhile.Condition>
                        <Sequence sap:VirtualizedContainerService.HintSize="752,2536" sap2010:WorkflowViewState.IdRef="Sequence_36">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="710,62.6666666666667" sap2010:WorkflowViewState.IdRef="WriteLine_8" Text="[ActiveRowCell]" />
                          <ui:ExcelReadCell Cell="[&quot;C&quot; + CurrentRow.ToString]" DisplayName="Read Cell" sap:VirtualizedContainerService.HintSize="710,58.6666666666667" sap2010:WorkflowViewState.IdRef="ExcelReadCell_11" SheetName="[SheetName]">
                            <ui:ExcelReadCell.Result>
                              <OutArgument x:TypeArguments="x:String">[CurrentGOA]</OutArgument>
                            </ui:ExcelReadCell.Result>
                          </ui:ExcelReadCell>
                          <ui:ExcelReadCell Cell="[&quot;E&quot; + CurrentRow.ToString]" DisplayName="Read Cell" sap:VirtualizedContainerService.HintSize="710,58.6666666666667" sap2010:WorkflowViewState.IdRef="ExcelReadCell_12" SheetName="[SheetName]">
                            <ui:ExcelReadCell.Result>
                              <OutArgument x:TypeArguments="x:Double">[CurrentFY]</OutArgument>
                            </ui:ExcelReadCell.Result>
                          </ui:ExcelReadCell>
                          <ui:ExcelReadCell Cell="[&quot;I&quot; + CurrentRow.ToString]" DisplayName="Read Cell" sap:VirtualizedContainerService.HintSize="710,58.6666666666667" sap2010:WorkflowViewState.IdRef="ExcelReadCell_13" SheetName="[SheetName]">
                            <ui:ExcelReadCell.Result>
                              <OutArgument x:TypeArguments="x:Double">[CurrentPPB]</OutArgument>
                            </ui:ExcelReadCell.Result>
                          </ui:ExcelReadCell>
                          <ui:ExcelReadCell Cell="[&quot;U&quot; + CurrentRow.ToString]" DisplayName="Read Cell" sap:VirtualizedContainerService.HintSize="710,58.6666666666667" sap2010:WorkflowViewState.IdRef="ExcelReadCell_14" SheetName="[SheetName]">
                            <ui:ExcelReadCell.Result>
                              <OutArgument x:TypeArguments="x:Double">[CurrentOblAmt]</OutArgument>
                            </ui:ExcelReadCell.Result>
                          </ui:ExcelReadCell>
                          <If Condition="[GOACodes.Contains(CurrentGOA) AND CurrentFY &gt;= now.Year - 6]" sap:VirtualizedContainerService.HintSize="710,1572" sap2010:WorkflowViewState.IdRef="If_14">
                            <If.Then>
                              <Sequence sap:VirtualizedContainerService.HintSize="564,1421.33333333333" sap2010:WorkflowViewState.IdRef="Sequence_35">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <If Condition="[CY.ContainsKey(CurrentGOA)]" sap:VirtualizedContainerService.HintSize="522,284.666666666667" sap2010:WorkflowViewState.IdRef="If_11">
                                  <If.Else>
                                    <InvokeMethod DisplayName="Invoke Method" sap:VirtualizedContainerService.HintSize="237.333333333333,134" sap2010:WorkflowViewState.IdRef="InvokeMethod_7" MethodName="Add">
                                      <InvokeMethod.TargetObject>
                                        <InArgument x:TypeArguments="scg:Dictionary(x:String, scg:Dictionary(x:String, scg:Dictionary(x:Double, x:Double)))">[CY]</InArgument>
                                      </InvokeMethod.TargetObject>
                                      <InArgument x:TypeArguments="x:String">[CurrentGOA]</InArgument>
                                      <InArgument x:TypeArguments="scg:Dictionary(x:String, scg:Dictionary(x:Double, x:Double))">[New Dictionary(Of String, Dictionary(Of Double, Double))]</InArgument>
                                    </InvokeMethod>
                                  </If.Else>
                                </If>
                                <If Condition="[CY(CurrentGOA).ContainsKey(CurrentPPB.ToString)]" sap:VirtualizedContainerService.HintSize="522,284.666666666667" sap2010:WorkflowViewState.IdRef="If_12">
                                  <If.Else>
                                    <InvokeMethod DisplayName="Invoke Method" sap:VirtualizedContainerService.HintSize="237.333333333333,134" sap2010:WorkflowViewState.IdRef="InvokeMethod_8" MethodName="Add">
                                      <InvokeMethod.TargetObject>
                                        <InArgument x:TypeArguments="scg:Dictionary(x:String, scg:Dictionary(x:Double, x:Double))">[CY(CurrentGOA)]</InArgument>
                                      </InvokeMethod.TargetObject>
                                      <InArgument x:TypeArguments="x:String">[CurrentPPB.ToString]</InArgument>
                                      <InArgument x:TypeArguments="scg:Dictionary(x:Double, x:Double)">[New Dictionary(Of Double, Double)]</InArgument>
                                    </InvokeMethod>
                                  </If.Else>
                                </If>
                                <InvokeMethod DisplayName="Invoke Method" sap:VirtualizedContainerService.HintSize="522,134" sap2010:WorkflowViewState.IdRef="InvokeMethod_9" MethodName="Add">
                                  <InvokeMethod.TargetObject>
                                    <InArgument x:TypeArguments="scg:Dictionary(x:Double, x:Double)">[CY(CurrentGOA)(CurrentPPB.ToString)]</InArgument>
                                  </InvokeMethod.TargetObject>
                                  <InArgument x:TypeArguments="x:Double">[CurrentFY]</InArgument>
                                  <InArgument x:TypeArguments="x:Double">[CurrentOblAmt]</InArgument>
                                </InvokeMethod>
                                <If Condition="[CurrentFY = now.Year - 1]" sap:VirtualizedContainerService.HintSize="522,403.333333333333" sap2010:WorkflowViewState.IdRef="If_13">
                                  <If.Then>
                                    <Sequence sap:VirtualizedContainerService.HintSize="376,252.666666666667" sap2010:WorkflowViewState.IdRef="Sequence_34">
                                      <Sequence.Variables>
                                        <Variable x:TypeArguments="x:Double" Name="AlotAmt" />
                                      </Sequence.Variables>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <ui:ExcelReadCell Cell="[&quot;T&quot; + CurrentRow.ToString]" DisplayName="Read Cell" sap:VirtualizedContainerService.HintSize="334,58.6666666666667" sap2010:WorkflowViewState.IdRef="ExcelReadCell_15" SheetName="[SheetName]">
                                        <ui:ExcelReadCell.Result>
                                          <OutArgument x:TypeArguments="x:Double">[AlotAmt]</OutArgument>
                                        </ui:ExcelReadCell.Result>
                                      </ui:ExcelReadCell>
                                      <Assign sap:VirtualizedContainerService.HintSize="334,62" sap2010:WorkflowViewState.IdRef="Assign_21">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:Double">[CurAlotAmt(CurrentGOA)]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:Double">[AlotAmt]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                    </Sequence>
                                  </If.Then>
                                </If>
                                <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="522,62.6666666666667" sap2010:WorkflowViewState.IdRef="WriteLine_9" Text="[CY(CurrentGOA)(CurrentPPB.toString)(CurrentFY).ToString]" />
                              </Sequence>
                            </If.Then>
                          </If>
                          <ui:TypeInto AlterIfDisabled="{x:Null}" ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" SimulateType="{x:Null}" Activate="True" DisplayName="Type Into 'item  &quot;C&quot; 1'" sap:VirtualizedContainerService.HintSize="710,134" sap2010:WorkflowViewState.IdRef="TypeInto_43" Text="%[k(down)]">
                            <ui:TypeInto.Target>
                              <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="b4e9dcc79b804468a2255ee5ca2084b7" Selector="&lt;wnd app='excel.exe' cls='XLMAIN' title='RD RC 502 as of 6.30.19 - Excel' /&gt;&lt;uia automationid='RD RC 502 as of 6.30.19.xlsx' cls='ExcelGrid' name='RD RC 502 as of 6.30.19' /&gt;">
                                <ui:Target.TimeoutMS>
                                  <InArgument x:TypeArguments="x:Int32" />
                                </ui:Target.TimeoutMS>
                                <ui:Target.WaitForReady>
                                  <InArgument x:TypeArguments="ui:WaitForReady" />
                                </ui:Target.WaitForReady>
                              </ui:Target>
                            </ui:TypeInto.Target>
                          </ui:TypeInto>
                          <Assign sap:VirtualizedContainerService.HintSize="710,62" sap2010:WorkflowViewState.IdRef="Assign_22">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Int32">[CurrentRow]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:Int32">[CurrentRow + 1]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <ui:ExcelReadCell Cell="[&quot;C&quot; + CurrentRow.ToString]" DisplayName="Read Cell" sap:VirtualizedContainerService.HintSize="710,58.6666666666667" sap2010:WorkflowViewState.IdRef="ExcelReadCell_16" SheetName="[SheetName]">
                            <ui:ExcelReadCell.Result>
                              <OutArgument x:TypeArguments="x:String">[ActiveRowCell]</OutArgument>
                            </ui:ExcelReadCell.Result>
                          </ui:ExcelReadCell>
                        </Sequence>
                      </DoWhile>
                      <ui:SendHotkey ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" Activate="True" DisplayName="Send Hotkey 'tab RD'" sap:VirtualizedContainerService.HintSize="798.666666666667,155.333333333333" sap2010:WorkflowViewState.IdRef="SendHotkey_10" Key="up" KeyModifiers="Ctrl" SpecialKey="True">
                        <ui:SendHotkey.Target>
                          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="0fa2fc7d714206c447c8566a8622db32" Selector="&lt;wnd app='excel.exe' cls='XLMAIN' title='RD RC 502 as of 6.30.19 - Excel' /&gt;&lt;uia automationid='RD RC 502 as of 6.30.19.xlsx' cls='ExcelGrid' name='RD RC 502 as of 6.30.19' /&gt;">
                            <ui:Target.TimeoutMS>
                              <InArgument x:TypeArguments="x:Int32" />
                            </ui:Target.TimeoutMS>
                            <ui:Target.WaitForReady>
                              <InArgument x:TypeArguments="ui:WaitForReady" />
                            </ui:Target.WaitForReady>
                          </ui:Target>
                        </ui:SendHotkey.Target>
                      </ui:SendHotkey>
                      <ui:SendHotkey ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" Activate="True" DisplayName="Send Hotkey 'tab RD'" sap:VirtualizedContainerService.HintSize="798.666666666667,155.333333333333" sap2010:WorkflowViewState.IdRef="SendHotkey_11" Key="up" KeyModifiers="Ctrl" SpecialKey="True">
                        <ui:SendHotkey.Target>
                          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="0fa2fc7d714206c447c8566a8622db32" Selector="&lt;wnd app='excel.exe' cls='XLMAIN' title='RD RC 502 as of 6.30.19 - Excel' /&gt;&lt;uia automationid='RD RC 502 as of 6.30.19.xlsx' cls='ExcelGrid' name='RD RC 502 as of 6.30.19' /&gt;">
                            <ui:Target.TimeoutMS>
                              <InArgument x:TypeArguments="x:Int32" />
                            </ui:Target.TimeoutMS>
                            <ui:Target.WaitForReady>
                              <InArgument x:TypeArguments="ui:WaitForReady" />
                            </ui:Target.WaitForReady>
                          </ui:Target>
                        </ui:SendHotkey.Target>
                      </ui:SendHotkey>
                    </Sequence>
                  </ActivityAction>
                </ui:ForEach.Body>
              </ui:ForEach>
            </Sequence>
            <Assign sap:VirtualizedContainerService.HintSize="919.333333333333,62" sap2010:WorkflowViewState.IdRef="Assign_9">
              <Assign.To>
                <OutArgument x:TypeArguments="scg:Dictionary(x:String, scg:Dictionary(x:String, scg:Dictionary(x:Double, x:Double)))">[out_CY]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="scg:Dictionary(x:String, scg:Dictionary(x:String, scg:Dictionary(x:Double, x:Double)))">[CY]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign sap:VirtualizedContainerService.HintSize="919.333333333333,62" sap2010:WorkflowViewState.IdRef="Assign_15">
              <Assign.To>
                <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:Double)">[out_CurAlotAmt]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Double)">[CurAlotAmt]</InArgument>
              </Assign.Value>
            </Assign>
          </Sequence>
        </ActivityAction>
      </ui:ExcelApplicationScope.Body>
    </ui:ExcelApplicationScope>
  </Sequence>
</Activity>