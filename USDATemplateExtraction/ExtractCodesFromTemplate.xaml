<Activity mc:Ignorable="sap sap2010" x:Class="Main" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:sc="clr-namespace:System.Collections;assembly=mscorlib" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="out_TreasuryCodes" Type="OutArgument(sc:ArrayList)" />
    <x:Property Name="out_GOACodes" Type="OutArgument(sc:ArrayList)" />
    <x:Property Name="out_PPBCodes" Type="OutArgument(sc:ArrayList)" />
    <x:Property Name="out_CY" Type="OutArgument(scg:Dictionary(x:String, scg:Dictionary(x:String, scg:Dictionary(x:Double, x:Double))))" />
    <x:Property Name="out_PY" Type="OutArgument(scg:Dictionary(x:String, scg:Dictionary(x:String, scg:Dictionary(x:Double, x:Double))))" />
    <x:Property Name="out_CurAlotAmt" Type="OutArgument(scg:Dictionary(x:String, x:Double))" />
    <x:Property Name="out_MajClassCodes" Type="OutArgument(sc:ArrayList)" />
    <x:Property Name="out_NewSheetFilePath" Type="OutArgument(x:String)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>742.666666666667,7124.66666666667</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ActivityBuilder_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="24">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="19">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Extract Information " sap:VirtualizedContainerService.HintSize="722.666666666667,7024.66666666667" sap2010:WorkflowViewState.IdRef="Sequence_2">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Default="C:\Users\pdolan\Documents\TestTemplate.xlsx" Name="TemplateFilePath" />
      <Variable x:TypeArguments="ui:WorkbookApplication" Name="Workbook" />
      <Variable x:TypeArguments="x:String" Name="SheetName" />
      <Variable x:TypeArguments="sc:ArrayList" Default="[New ArrayList]" Name="TreasuryCodes" />
      <Variable x:TypeArguments="scg:IEnumerable(x:Object)" Name="ColumnValues" />
      <Variable x:TypeArguments="x:Int32" Default="0" Name="Count" />
      <Variable x:TypeArguments="x:Int32" Default="2019" Name="CurrentYear" />
      <Variable x:TypeArguments="scg:Dictionary(x:Double, x:Double)" Default="[New Dictionary(Of Double, Double) From {{CurrentYear, 0},{CurrentYear - 1, 0}, {CurrentYear - 2, 0}, {CurrentYear - 3, 0}, {CurrentYear - 4, 0}, {CurrentYear - 5, 0}}]" Name="PPBDictDefault" />
      <Variable x:TypeArguments="sc:ArrayList" Default="[New ArrayList]" Name="PPBCodes" />
      <Variable x:TypeArguments="sc:ArrayList" Default="[New ArrayList]" Name="GOACodes" />
      <Variable x:TypeArguments="scg:Dictionary(x:String, scg:Dictionary(x:String, scg:Dictionary(x:Double, x:Double)))" Default="[New Dictionary(Of String, Dictionary(Of String, Dictionary(Of Double, Double)))]" Name="CY" />
      <Variable x:TypeArguments="scg:Dictionary(x:String, scg:Dictionary(x:Double, x:Double))" Name="CurrentGOA" />
      <Variable x:TypeArguments="x:String" Name="CurrentPPB" />
      <Variable x:TypeArguments="scg:Dictionary(x:Double, x:Double)" Default="[New Dictionary(Of Double, Double)]" Name="EmptyPBBDict" />
      <Variable x:TypeArguments="scg:Dictionary(x:String, scg:Dictionary(x:Double, x:Double))" Default="[New Dictionary(Of String, Dictionary(Of Double, Double))]" Name="EmptyGOADict" />
      <Variable x:TypeArguments="scg:Dictionary(x:String, x:Double)" Default="[New Dictionary(Of String, Double)]" Name="CurAlotDict" />
      <Variable x:TypeArguments="sc:ArrayList" Default="[New ArrayList]" Name="MajClassCodes" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="680.666666666667,6932.66666666667" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_1" Workbook="[Workbook]" WorkbookPath="[TemplateFilePath]">
      <ui:ExcelApplicationScope.Body>
        <ActivityAction x:TypeArguments="ui:WorkbookApplication">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="646.666666666667,6824" sap2010:WorkflowViewState.IdRef="Sequence_1">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Assign sap:VirtualizedContainerService.HintSize="604.666666666667,62" sap2010:WorkflowViewState.IdRef="Assign_1">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[SheetName]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[Workbook.GetWorkbookSheet(0)]</InArgument>
              </Assign.Value>
            </Assign>
            <Sequence DisplayName="Get Treasury Codes" sap:VirtualizedContainerService.HintSize="604.666666666667,907.333333333333" sap2010:WorkflowViewState.IdRef="Sequence_5">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:ExcelReadColumn DisplayName="Read Column" sap:VirtualizedContainerService.HintSize="562.666666666667,58.6666666666667" sap2010:WorkflowViewState.IdRef="ExcelReadColumn_1" Result="[ColumnValues]" SheetName="[SheetName]" StartingCell="H4" />
              <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="562.666666666667,614.666666666667" sap2010:WorkflowViewState.IdRef="ForEach`1_2" Values="[ColumnValues]">
                <ui:ForEach.Body>
                  <ActivityAction x:TypeArguments="x:String">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="x:String" Name="value" />
                    </ActivityAction.Argument>
                    <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="526,479.333333333333" sap2010:WorkflowViewState.IdRef="Sequence_3">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="484,62.6666666666667" sap2010:WorkflowViewState.IdRef="WriteLine_5" Text="[value]" />
                      <If Condition="[TreasuryCodes.Contains(value)]" sap:VirtualizedContainerService.HintSize="484,284.666666666667" sap2010:WorkflowViewState.IdRef="If_2">
                        <If.Else>
                          <InvokeMethod DisplayName="Invoke Method" sap:VirtualizedContainerService.HintSize="237.333333333333,134" sap2010:WorkflowViewState.IdRef="InvokeMethod_5" MethodName="Add">
                            <InvokeMethod.TargetObject>
                              <InArgument x:TypeArguments="sc:ArrayList">[TreasuryCodes]</InArgument>
                            </InvokeMethod.TargetObject>
                            <InArgument x:TypeArguments="x:String">[value]</InArgument>
                          </InvokeMethod>
                        </If.Else>
                      </If>
                    </Sequence>
                  </ActivityAction>
                </ui:ForEach.Body>
              </ui:ForEach>
              <Assign sap:VirtualizedContainerService.HintSize="562.666666666667,62" sap2010:WorkflowViewState.IdRef="Assign_5">
                <Assign.To>
                  <OutArgument x:TypeArguments="sc:ArrayList">[out_TreasuryCodes]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="sc:ArrayList">[TreasuryCodes]</InArgument>
                </Assign.Value>
              </Assign>
            </Sequence>
            <Sequence DisplayName="Get GOA Codes" sap:VirtualizedContainerService.HintSize="604.666666666667,907.333333333333" sap2010:WorkflowViewState.IdRef="Sequence_7">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:ExcelReadColumn DisplayName="Read Column" sap:VirtualizedContainerService.HintSize="562.666666666667,58.6666666666667" sap2010:WorkflowViewState.IdRef="ExcelReadColumn_2" Result="[ColumnValues]" SheetName="[SheetName]" StartingCell="B4" />
              <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="562.666666666667,614.666666666667" sap2010:WorkflowViewState.IdRef="ForEach`1_5" Values="[ColumnValues]">
                <ui:ForEach.Body>
                  <ActivityAction x:TypeArguments="x:String">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="x:String" Name="value" />
                    </ActivityAction.Argument>
                    <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="526,479.333333333333" sap2010:WorkflowViewState.IdRef="Sequence_6">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="484,62.6666666666667" sap2010:WorkflowViewState.IdRef="WriteLine_6" Text="[value]" />
                      <If Condition="[GOACodes.Contains(value)]" sap:VirtualizedContainerService.HintSize="484,284.666666666667" sap2010:WorkflowViewState.IdRef="If_3">
                        <If.Else>
                          <InvokeMethod DisplayName="Invoke Method" sap:VirtualizedContainerService.HintSize="237.333333333333,134" sap2010:WorkflowViewState.IdRef="InvokeMethod_7" MethodName="Add">
                            <InvokeMethod.TargetObject>
                              <InArgument x:TypeArguments="sc:ArrayList">[GOACodes]</InArgument>
                            </InvokeMethod.TargetObject>
                            <InArgument x:TypeArguments="x:String">[value]</InArgument>
                          </InvokeMethod>
                        </If.Else>
                      </If>
                    </Sequence>
                  </ActivityAction>
                </ui:ForEach.Body>
              </ui:ForEach>
              <Assign sap:VirtualizedContainerService.HintSize="562.666666666667,62" sap2010:WorkflowViewState.IdRef="Assign_9">
                <Assign.To>
                  <OutArgument x:TypeArguments="sc:ArrayList">[out_GOACodes]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="sc:ArrayList">[GOACodes]</InArgument>
                </Assign.Value>
              </Assign>
            </Sequence>
            <Sequence DisplayName="Get PPB Codes" sap:VirtualizedContainerService.HintSize="604.666666666667,828.666666666667" sap2010:WorkflowViewState.IdRef="Sequence_9">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:ExcelReadColumn DisplayName="Read Column" sap:VirtualizedContainerService.HintSize="334,58.6666666666667" sap2010:WorkflowViewState.IdRef="ExcelReadColumn_3" Result="[ColumnValues]" SheetName="[SheetName]" StartingCell="F4" />
              <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="334,464" sap2010:WorkflowViewState.IdRef="ForEach`1_9" Values="[ColumnValues]">
                <ui:ForEach.Body>
                  <ActivityAction x:TypeArguments="x:Object">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="x:Object" Name="value" />
                    </ActivityAction.Argument>
                    <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="279.333333333333,328.666666666667" sap2010:WorkflowViewState.IdRef="Sequence_8">
                      <Sequence.Variables>
                        <Variable x:TypeArguments="x:String" Name="valueType" />
                      </Sequence.Variables>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="237.333333333333,62.6666666666667" sap2010:WorkflowViewState.IdRef="WriteLine_7" Text="[value.ToString]" />
                      <InvokeMethod DisplayName="Invoke Method" sap:VirtualizedContainerService.HintSize="237.333333333333,134" sap2010:WorkflowViewState.IdRef="InvokeMethod_6" MethodName="Add">
                        <InvokeMethod.TargetObject>
                          <InArgument x:TypeArguments="sc:ArrayList">[PPBCodes]</InArgument>
                        </InvokeMethod.TargetObject>
                        <InArgument x:TypeArguments="x:Double">[Convert.ToDouble(value)]</InArgument>
                      </InvokeMethod>
                    </Sequence>
                  </ActivityAction>
                </ui:ForEach.Body>
              </ui:ForEach>
              <InvokeMethod DisplayName="Invoke Method" sap:VirtualizedContainerService.HintSize="334,134" sap2010:WorkflowViewState.IdRef="InvokeMethod_11" MethodName="Add">
                <InvokeMethod.TargetObject>
                  <InArgument x:TypeArguments="sc:ArrayList">[PPBCodes]</InArgument>
                </InvokeMethod.TargetObject>
                <InArgument x:TypeArguments="x:Double">0</InArgument>
              </InvokeMethod>
            </Sequence>
            <Sequence DisplayName="Get Maj Class Codes" sap:VirtualizedContainerService.HintSize="604.666666666667,999.333333333333" sap2010:WorkflowViewState.IdRef="Sequence_17">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:ExcelReadColumn DisplayName="Read Column" sap:VirtualizedContainerService.HintSize="436.666666666667,58.6666666666667" sap2010:WorkflowViewState.IdRef="ExcelReadColumn_4" Result="[ColumnValues]" SheetName="[SheetName]" StartingCell="D4" />
              <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="436.666666666667,464" sap2010:WorkflowViewState.IdRef="ForEach`1_10" Values="[ColumnValues]">
                <ui:ForEach.Body>
                  <ActivityAction x:TypeArguments="x:Object">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="x:Object" Name="value" />
                    </ActivityAction.Argument>
                    <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="279.333333333333,328.666666666667" sap2010:WorkflowViewState.IdRef="Sequence_16">
                      <Sequence.Variables>
                        <Variable x:TypeArguments="x:String" Name="valueType" />
                      </Sequence.Variables>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="237.333333333333,62.6666666666667" sap2010:WorkflowViewState.IdRef="WriteLine_10" Text="[value.ToString]" />
                      <InvokeMethod DisplayName="Invoke Method" sap:VirtualizedContainerService.HintSize="237.333333333333,134" sap2010:WorkflowViewState.IdRef="InvokeMethod_10" MethodName="Add">
                        <InvokeMethod.TargetObject>
                          <InArgument x:TypeArguments="sc:ArrayList">[MajClassCodes]</InArgument>
                        </InvokeMethod.TargetObject>
                        <InArgument x:TypeArguments="x:Double">[Convert.ToDouble(value)]</InArgument>
                      </InvokeMethod>
                    </Sequence>
                  </ActivityAction>
                </ui:ForEach.Body>
              </ui:ForEach>
              <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="436.666666666667,304.666666666667" sap2010:WorkflowViewState.IdRef="CommentOut_3">
                <ui:CommentOut.Body>
                  <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="279.333333333333,226" sap2010:WorkflowViewState.IdRef="Sequence_19">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <InvokeMethod DisplayName="Invoke Method" sap:VirtualizedContainerService.HintSize="237.333333333333,134" sap2010:WorkflowViewState.IdRef="InvokeMethod_12" MethodName="Add">
                      <InvokeMethod.TargetObject>
                        <InArgument x:TypeArguments="sc:ArrayList">[MajClassCodes]</InArgument>
                      </InvokeMethod.TargetObject>
                      <InArgument x:TypeArguments="x:Double">0</InArgument>
                    </InvokeMethod>
                  </Sequence>
                </ui:CommentOut.Body>
              </ui:CommentOut>
            </Sequence>
            <Assign sap:VirtualizedContainerService.HintSize="604.666666666667,62" sap2010:WorkflowViewState.IdRef="Assign_14">
              <Assign.To>
                <OutArgument x:TypeArguments="sc:ArrayList">[out_PPBCodes]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="sc:ArrayList">[PPBCodes]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign sap:VirtualizedContainerService.HintSize="604.666666666667,62" sap2010:WorkflowViewState.IdRef="Assign_27">
              <Assign.To>
                <OutArgument x:TypeArguments="sc:ArrayList">[out_MajClassCodes]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="sc:ArrayList">[MajClassCodes]</InArgument>
              </Assign.Value>
            </Assign>
            <Sequence sap:VirtualizedContainerService.HintSize="604.666666666667,2623.33333333333" sap2010:WorkflowViewState.IdRef="Sequence_11">
              <Sequence.Variables>
                <Variable x:TypeArguments="scg:Dictionary(x:String, scg:Dictionary(x:String, scg:Dictionary(x:Double, x:Double)))" Default="[New Dictionary(Of String, Dictionary(Of String, Dictionary(Of Double, Double)))]" Name="PY" />
                <Variable x:TypeArguments="x:String" Name="NewSheetName" />
                <Variable x:TypeArguments="x:String" Name="NewSheetFilePath" />
              </Sequence.Variables>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="557.333333333333,1857.33333333333" sap2010:WorkflowViewState.IdRef="ForEach`1_8" Values="[GOACodes]">
                <ui:ForEach.Body>
                  <ActivityAction x:TypeArguments="x:String">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="x:String" Name="GOA" />
                    </ActivityAction.Argument>
                    <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="520.666666666667,1722" sap2010:WorkflowViewState.IdRef="Sequence_10">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <Sequence sap:VirtualizedContainerService.HintSize="478.666666666667,1630" sap2010:WorkflowViewState.IdRef="Sequence_14">
                        <Sequence.Variables>
                          <Variable x:TypeArguments="scg:Dictionary(x:String, scg:Dictionary(x:Double, x:Double))" Default="[New Dictionary(Of String, Dictionary(Of Double, Double))]" Name="CurrentPPBDict" />
                        </Sequence.Variables>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Assign sap:VirtualizedContainerService.HintSize="436.666666666667,62" sap2010:WorkflowViewState.IdRef="Assign_16">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[CurrentPPB]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[PPBCodes(Count).ToString]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <InvokeMethod DisplayName="Invoke Method" sap:VirtualizedContainerService.HintSize="436.666666666667,134" sap2010:WorkflowViewState.IdRef="InvokeMethod_8" MethodName="Add">
                          <InvokeMethod.TargetObject>
                            <InArgument x:TypeArguments="scg:Dictionary(x:String, scg:Dictionary(x:Double, x:Double))">[CurrentPPBDict]</InArgument>
                          </InvokeMethod.TargetObject>
                          <InArgument x:TypeArguments="x:String">[CurrentPPB]</InArgument>
                          <InArgument x:TypeArguments="scg:Dictionary(x:Double, x:Double)">[New Dictionary(Of Double, Double)]</InArgument>
                        </InvokeMethod>
                        <Assign sap:VirtualizedContainerService.HintSize="436.666666666667,62" sap2010:WorkflowViewState.IdRef="Assign_24">
                          <Assign.To>
                            <OutArgument x:TypeArguments="scg:Dictionary(x:Double, x:Double)">[CurrentPPBDict(CurrentPPB)]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="scg:Dictionary(x:Double, x:Double)">[PPBDictDefault]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="436.666666666667,62.6666666666667" sap2010:WorkflowViewState.IdRef="WriteLine_9" Text="[GOA]" />
                        <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="436.666666666667,304.666666666667" sap2010:WorkflowViewState.IdRef="CommentOut_4">
                          <ui:CommentOut.Body>
                            <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="279.333333333333,226" sap2010:WorkflowViewState.IdRef="Sequence_20">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <InvokeMethod DisplayName="Invoke Method" sap:VirtualizedContainerService.HintSize="237.333333333333,134" sap2010:WorkflowViewState.IdRef="InvokeMethod_1" MethodName="Add">
                                <InvokeMethod.TargetObject>
                                  <InArgument x:TypeArguments="scg:Dictionary(x:String, scg:Dictionary(x:String, scg:Dictionary(x:Double, x:Double)))">[CY]</InArgument>
                                </InvokeMethod.TargetObject>
                                <InArgument x:TypeArguments="x:String">[GOA]</InArgument>
                                <InArgument x:TypeArguments="scg:Dictionary(x:String, scg:Dictionary(x:Double, x:Double))">[EmptyGOADict]</InArgument>
                              </InvokeMethod>
                            </Sequence>
                          </ui:CommentOut.Body>
                        </ui:CommentOut>
                        <Assign sap:VirtualizedContainerService.HintSize="436.666666666667,62" sap2010:WorkflowViewState.IdRef="Assign_22">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Double">[CurAlotDict(GOA)]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Double">0</InArgument>
                          </Assign.Value>
                        </Assign>
                        <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="436.666666666667,304.666666666667" sap2010:WorkflowViewState.IdRef="CommentOut_1">
                          <ui:CommentOut.Body>
                            <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="279.333333333333,226" sap2010:WorkflowViewState.IdRef="Sequence_15">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <InvokeMethod DisplayName="Invoke Method" sap:VirtualizedContainerService.HintSize="237.333333333333,134" sap2010:WorkflowViewState.IdRef="InvokeMethod_2" MethodName="Add">
                                <InvokeMethod.TargetObject>
                                  <InArgument x:TypeArguments="scg:Dictionary(x:String, scg:Dictionary(x:Double, x:Double))">[CY(GOA)]</InArgument>
                                </InvokeMethod.TargetObject>
                                <InArgument x:TypeArguments="x:String">[CurrentPPB]</InArgument>
                                <InArgument x:TypeArguments="scg:Dictionary(x:Double, x:Double)">[PPBDictDefault]</InArgument>
                              </InvokeMethod>
                            </Sequence>
                          </ui:CommentOut.Body>
                        </ui:CommentOut>
                        <Assign sap:VirtualizedContainerService.HintSize="436.666666666667,62" sap2010:WorkflowViewState.IdRef="Assign_26">
                          <Assign.To>
                            <OutArgument x:TypeArguments="scg:Dictionary(x:String, scg:Dictionary(x:Double, x:Double))">[CY(GOA)]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="scg:Dictionary(x:String, scg:Dictionary(x:Double, x:Double))">[CurrentPPBDict]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="436.666666666667,62" sap2010:WorkflowViewState.IdRef="Assign_21">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Int32">[Count]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Int32">[Count + 1]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="436.666666666667,62" sap2010:WorkflowViewState.IdRef="Assign_25">
                          <Assign.To>
                            <OutArgument x:TypeArguments="scg:Dictionary(x:String, scg:Dictionary(x:Double, x:Double))">[CurrentPPBDict]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="scg:Dictionary(x:String, scg:Dictionary(x:Double, x:Double))">[New Dictionary(Of String, Dictionary(Of Double, Double))]</InArgument>
                          </Assign.Value>
                        </Assign>
                      </Sequence>
                    </Sequence>
                  </ActivityAction>
                </ui:ForEach.Body>
              </ui:ForEach>
              <Assign sap:VirtualizedContainerService.HintSize="557.333333333333,62" sap2010:WorkflowViewState.IdRef="Assign_28">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[NewSheetName]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[SheetName.Remove(SheetName.IndexOf("Template")).Trim]</InArgument>
                </Assign.Value>
              </Assign>
              <Assign sap:VirtualizedContainerService.HintSize="557.333333333333,62" sap2010:WorkflowViewState.IdRef="Assign_29">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[NewSheetFilePath]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String" xml:space="preserve">[TemplateFilePath.Remove(TemplateFilePath.IndexOf("TestTemplate")) + NewSheetName + " " + CurrentYear.toString + " " +  "EstimatedCarryOver.xlsx"]</InArgument>
                </Assign.Value>
              </Assign>
              <ui:ExcelCopySheet DestinationFilePath="[NewSheetFilePath]" DestinationSheetName="[NewSheetName]" DisplayName="Copy Sheet" sap:VirtualizedContainerService.HintSize="557.333333333333,22" sap2010:WorkflowViewState.IdRef="ExcelCopySheet_1" SheetName="[SheetName]" />
              <Assign sap:VirtualizedContainerService.HintSize="557.333333333333,62" sap2010:WorkflowViewState.IdRef="Assign_18">
                <Assign.To>
                  <OutArgument x:TypeArguments="scg:Dictionary(x:String, scg:Dictionary(x:String, scg:Dictionary(x:Double, x:Double)))">[out_CY]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="scg:Dictionary(x:String, scg:Dictionary(x:String, scg:Dictionary(x:Double, x:Double)))">[CY]</InArgument>
                </Assign.Value>
              </Assign>
              <Assign sap:VirtualizedContainerService.HintSize="557.333333333333,62" sap2010:WorkflowViewState.IdRef="Assign_19">
                <Assign.To>
                  <OutArgument x:TypeArguments="scg:Dictionary(x:String, scg:Dictionary(x:String, scg:Dictionary(x:Double, x:Double)))">[out_PY]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="scg:Dictionary(x:String, scg:Dictionary(x:String, scg:Dictionary(x:Double, x:Double)))">[CY]</InArgument>
                </Assign.Value>
              </Assign>
              <Assign sap:VirtualizedContainerService.HintSize="557.333333333333,62" sap2010:WorkflowViewState.IdRef="Assign_23">
                <Assign.To>
                  <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:Double)">[out_CurAlotAmt]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Double)">[CurAlotDict]</InArgument>
                </Assign.Value>
              </Assign>
              <Assign sap:VirtualizedContainerService.HintSize="557.333333333333,62" sap2010:WorkflowViewState.IdRef="Assign_30">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[out_NewSheetFilePath]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[NewSheetFilePath]</InArgument>
                </Assign.Value>
              </Assign>
            </Sequence>
          </Sequence>
        </ActivityAction>
      </ui:ExcelApplicationScope.Body>
    </ui:ExcelApplicationScope>
  </Sequence>
</Activity>